# Pre-commit hooks configuration
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Remove trailing whitespace
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      
      # Ensure files end with a newline
      - id: end-of-file-fixer
      
      # Check YAML syntax
      - id: check-yaml
        args: [--safe]
      
      # Check for large files
      - id: check-added-large-files
        args: [--maxkb=500]
      
      # Check for merge conflicts
      - id: check-merge-conflict
      
      # Check JSON syntax
      - id: check-json
      
      # Check TOML syntax
      - id: check-toml
      
      # Prevent committing to main/master
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # Rust-specific hooks
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      # Check Rust formatting
      - id: fmt
        name: cargo fmt
        entry: cargo fmt --
        language: system
        types: [rust]
        pass_filenames: true
      
      # Run Cargo check
      - id: cargo-check
        name: cargo check
        entry: cargo check --all-features
        language: system
        types: [rust]
        pass_filenames: false
      
      # Run Clippy linter
      - id: clippy
        name: cargo clippy
        entry: cargo clippy --all-features --all-targets -- -D warnings
        language: system
        types: [rust]
        pass_filenames: false

  # Conventional Commits validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args:
          - feat
          - fix
          - docs
          - style
          - refactor
          - perf
          - test
          - chore
          - ci
          - build
          - revert

# Configuration
default_stages: [commit, push]
fail_fast: false
minimum_pre_commit_version: '3.0.0'